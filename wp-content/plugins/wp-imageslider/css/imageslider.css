.clearfix {
  *zoom: 1; }
  .clearfix:before, .clearfix:after {
    display: table;
    content: ""; }
  .clearfix:after {
    clear: both; }

.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0; }

.input-block-level {
  display: block;
  width: 100%;
  min-height: 28px;
  -ms-box-sizing: border-box;
  box-sizing: border-box; }

.imsl-slide-show {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 575px; }
  .imsl-slide-show.ani {
    transition: all 200ms ease-in-out; }
  .imsl-slide-show.transitions .slides-container {
    transition: -webkit-transform 300ms ease-out;
    transition: transform 300ms ease-out;
    transition: transform 300ms ease-out, -webkit-transform 300ms ease-out; }
  .imsl-slide-show.fixed-height {
    width: 100% !important;
    height: 575px !important; }
    .imsl-slide-show.fixed-height ul .slide, .imsl-slide-show.fixed-height ul .slide .image {
      height: 575px !important; }
  .imsl-slide-show ul {
    z-index: 100;
    margin: 0;
    list-style: none; }
    .imsl-slide-show ul .slide {
      position: relative;
      float: left;
      width: 100%;
      height: 575px; }
      .imsl-slide-show ul .slide .image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 575px;
        background-size: cover;
        background-position: center center; }
      .imsl-slide-show ul .slide .title, .imsl-slide-show ul .slide .text1, .imsl-slide-show ul .slide .text2, .imsl-slide-show ul .slide .text3 {
        opacity: 0;
        filter: alpha(opacity=0);
        z-index: 999999; }
      .imsl-slide-show ul .slide .main-divider {
        display: none; }
    .imsl-slide-show ul .youtube-slide .video-container iframe,
    .imsl-slide-show ul .vimeo-slide .video-container iframe {
      position: absolute;
      top: 50%;
      -webkit-transform: translateY(-50%);
              transform: translateY(-50%); }
  .imsl-slide-show .icon-link {
    position: absolute;
    top: 50%;
    z-index: 999;
    cursor: pointer;
    transition: all 600ms ease-out; }
    .imsl-slide-show .icon-link.prev-link {
      left: -50px; }
    .imsl-slide-show .icon-link.next-link {
      right: -50px; }
  .imsl-slide-show.default .icon-link {
    width: 34px;
    height: 34px;
    margin-top: -17px; }
    .imsl-slide-show.default .icon-link .icon {
      display: inline-block;
      width: 34px;
      height: 34px;
      background-size: 34px 34px;
      background-repeat: no-repeat; }
      .imsl-slide-show.default .icon-link .icon.prev-icon {
        background-image: url("../images/icon-prev.png"); }
      .imsl-slide-show.default .icon-link .icon.next-icon {
        background-image: url("../images/icon-next.png"); }
    .imsl-slide-show.default .icon-link:hover .icon.prev-icon {
      background-image: url("../images/icon-prev-over.png"); }
    .imsl-slide-show.default .icon-link:hover .icon.next-icon {
      background-image: url("../images/icon-next-over.png"); }
  .imsl-slide-show.simple .icon-link {
    width: 23px;
    height: 43px;
    margin-top: -12px;
    /*
			&:hover .icon {
				&.prev-icon {
					background-image: url('../images/arrow-left-over.png');
				}
				&.next-icon {
					background-image: url('../images/icon-next-over.png');
				}
			}
			*/ }
    .imsl-slide-show.simple .icon-link .icon {
      display: inline-block;
      width: 23px;
      height: 43px;
      background-size: 23px 43px;
      background-repeat: no-repeat; }
      .imsl-slide-show.simple .icon-link .icon.prev-icon {
        background-image: url("../images/arrow-left.png"); }
        @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {
          .imsl-slide-show.simple .icon-link .icon.prev-icon {
            background-image: url("../images/arrow-left@2x.png"); } }
      .imsl-slide-show.simple .icon-link .icon.next-icon {
        background-image: url("../images/arrow-right.png"); }
        @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {
          .imsl-slide-show.simple .icon-link .icon.next-icon {
            background-image: url("../images/arrow-right@2x.png"); } }
  .imsl-slide-show .imsl-dots {
    position: absolute;
    bottom: -80px;
    left: 0;
    right: 0;
    z-index: 900 !important;
    height: auto !important;
    text-align: center;
    transition: all 1000ms ease-out; }
    .imsl-slide-show .imsl-dots > li {
      width: 15px;
      height: 15px;
      overflow: hidden;
      display: inline-block;
      margin: 3px;
      border-radius: 50%;
      background-color: rgba(0, 0, 0, 0.6); }
      .imsl-slide-show .imsl-dots > li.active {
        background-color: #fff; }
  .imsl-slide-show.default .imsl-dots {
    margin: 0 auto 15px; }
    .imsl-slide-show.default .imsl-dots > li {
      border: 2px solid #fff;
      background-color: rgba(0, 0, 0, 0.6);
      box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75); }
      .imsl-slide-show.default .imsl-dots > li.active {
        background-color: #fff; }
  .imsl-slide-show.simple .imsl-dots {
    margin: 0 auto; }
    .imsl-slide-show.simple .imsl-dots > li {
      background-color: rgba(255, 255, 255, 0.4); }
      .imsl-slide-show.simple .imsl-dots > li.active {
        background-color: #fff; }
  .imsl-slide-show.enabled .icon-link.prev-link {
    left: 10px; }
  .imsl-slide-show.enabled .icon-link.next-link {
    right: 10px; }
  .imsl-slide-show.enabled .imsl-dots {
    bottom: 0;
    left: 80px;
    right: 80px; }
    @media (max-width: 560px) {
      .imsl-slide-show.enabled .imsl-dots {
        left: 10px;
        right: 10px; } }
  .imsl-slide-show.simple.enabled .icon-link.prev-link {
    left: 20px; }
  .imsl-slide-show.simple.enabled .icon-link.next-link {
    right: 20px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
