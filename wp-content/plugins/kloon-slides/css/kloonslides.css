.clearfix {
  *zoom: 1; }
  .clearfix:before, .clearfix:after {
    display: table;
    content: ""; }
  .clearfix:after {
    clear: both; }

.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0; }

.input-block-level {
  display: block;
  width: 100%;
  min-height: 28px;
  -ms-box-sizing: border-box;
  box-sizing: border-box; }

.kloonslides-modal-video .video-overlay {
  background-color: rgba(0, 0, 0, 0.9);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10990;
  pointer-events: none;
  opacity: 0;
  filter: alpha(opacity=0);
  transition: all 400ms ease-in-out; }

.kloonslides-modal-video .video-modal {
  z-index: 11000;
  position: fixed;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }
  .kloonslides-modal-video .video-modal .close {
    width: 22px;
    height: 22px;
    position: absolute;
    top: -30px;
    right: 0;
    background-image: url("../images/close.png");
    background-size: 22px;
    cursor: pointer;
    opacity: 0;
    filter: alpha(opacity=0);
    transition: all 200ms ease-in-out; }

.kloonslides-modal-video.active .video-overlay {
  opacity: 1;
  filter: alpha(opacity=100); }

.kloonslides-modal-video.active .close {
  opacity: 1;
  filter: alpha(opacity=100); }

.kloonslides-slideshow {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 575px;
  background-color: #000;
  /*&.fixed-height {
		width: 100% !important;
		 height: 575px !important;
		ul .slide, ul .slide .image {
			width: 100% !important;
			height: 575px !important;
		}
	}*/ }
  .kloonslides-slideshow.ani {
    transition: all 200ms ease-in-out; }
  .kloonslides-slideshow ul {
    z-index: 100;
    margin: 0;
    list-style: none; }
    .kloonslides-slideshow ul.transitions {
      transition: all 600ms; }
    .kloonslides-slideshow ul .slide {
      float: left;
      width: 100%;
      height: 100%;
      position: relative;
      /*
			display: none;
			&.displayed {
				display: list-item;
			}
			*/
      opacity: 0;
      filter: alpha(opacity=0); }
      .kloonslides-slideshow ul .slide.displayed {
        opacity: 1;
        filter: alpha(opacity=100); }
      .kloonslides-slideshow ul .slide .presentations {
        -webkit-transform: translateZ(0);
                transform: translateZ(0); }
      .kloonslides-slideshow ul .slide .image {
        width: 100%;
        height: 100%;
        background-size: cover;
        background-position: center center; }
      .kloonslides-slideshow ul .slide .title, .kloonslides-slideshow ul .slide .text1, .kloonslides-slideshow ul .slide .text2, .kloonslides-slideshow ul .slide .text3 {
        opacity: 0;
        filter: alpha(opacity=0);
        z-index: 999999; }
      .kloonslides-slideshow ul .slide .main-divider {
        display: none; }
  .kloonslides-slideshow .icon-link {
    position: absolute;
    top: 50%;
    z-index: 999;
    cursor: pointer;
    transition: all 600ms ease-out; }
    .kloonslides-slideshow .icon-link.prev-link {
      left: -50px; }
    .kloonslides-slideshow .icon-link.next-link {
      right: -50px; }
  .kloonslides-slideshow .icon-link {
    width: 34px;
    height: 34px;
    margin-top: -17px; }
    .kloonslides-slideshow .icon-link .icon {
      display: inline-block;
      width: 34px;
      height: 34px;
      background-size: 34px 34px;
      background-repeat: no-repeat; }
      .kloonslides-slideshow .icon-link .icon.prev-icon {
        background-image: url("../images/icon-prev.png"); }
      .kloonslides-slideshow .icon-link .icon.next-icon {
        background-image: url("../images/icon-next.png"); }
    .kloonslides-slideshow .icon-link:hover .icon.prev-icon {
      background-image: url("../images/icon-prev-over.png"); }
    .kloonslides-slideshow .icon-link:hover .icon.next-icon {
      background-image: url("../images/icon-next-over.png"); }
  .kloonslides-slideshow.simple .icon-link {
    width: 23px;
    height: 43px;
    margin-top: -12px;
    /*
			&:hover .icon {
				&.prev-icon {
					background-image: url('../images/arrow-left-over.png');
				}
				&.next-icon {
					background-image: url('../images/icon-next-over.png');
				}
			}
			*/ }
    .kloonslides-slideshow.simple .icon-link .icon {
      display: inline-block;
      width: 23px;
      height: 43px;
      background-size: 23px 43px;
      background-repeat: no-repeat; }
      .kloonslides-slideshow.simple .icon-link .icon.prev-icon {
        background-image: url("../images/arrow-left.png"); }
        @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {
          .kloonslides-slideshow.simple .icon-link .icon.prev-icon {
            background-image: url("../images/arrow-left@2x.png"); } }
      .kloonslides-slideshow.simple .icon-link .icon.next-icon {
        background-image: url("../images/arrow-right.png"); }
        @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {
          .kloonslides-slideshow.simple .icon-link .icon.next-icon {
            background-image: url("../images/arrow-right@2x.png"); } }
  .kloonslides-slideshow .kloonslides-dots {
    position: absolute;
    bottom: -80px;
    left: 0;
    right: 0;
    z-index: 900 !important;
    height: auto !important;
    text-align: center;
    transition: all 1000ms ease-out; }
    .kloonslides-slideshow .kloonslides-dots > li {
      width: 15px;
      height: 15px;
      overflow: hidden;
      display: inline-block;
      margin: 3px;
      border-radius: 50%;
      background-color: rgba(0, 0, 0, 0.6); }
      .kloonslides-slideshow .kloonslides-dots > li.active {
        background-color: #fff; }
  .kloonslides-slideshow.enabled .icon-link.prev-link {
    left: 10px; }
  .kloonslides-slideshow.enabled .icon-link.next-link {
    right: 10px; }
  .kloonslides-slideshow.enabled .kloonslides-dots {
    bottom: 0;
    left: 80px;
    right: 80px; }
    .kloonslides-slideshow.enabled .kloonslides-dots .dot {
      cursor: pointer; }
  .kloonslides-slideshow .play-video-icon-wrapper {
    display: block;
    margin: 0 auto;
    z-index: 100;
    -webkit-transform: translateZ(0);
    transform: translateZ(0); }
    .kloonslides-slideshow .play-video-icon-wrapper .play-video-icon {
      display: block;
      width: 80px;
      height: 80px;
      margin: 0 auto;
      cursor: pointer;
      background-image: url("../images/play-arrow-fill.png");
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center; }
  .kloonslides-slideshow .bgr-video {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 1;
    overflow: hidden; }
    .kloonslides-slideshow .bgr-video video {
      width: 100%;
      height: 100%;
      -o-object-fit: cover;
         object-fit: cover;
      z-index: 1; }

@media (max-width: 560px) {
  .kloonslides-dots {
    bottom: -80px !important; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
